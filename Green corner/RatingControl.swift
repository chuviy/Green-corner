//
//  RatingControl.swift
//  Green corner
//
//  Created by Aleksey Antokhin on 25.12.2020.
//  Copyright ¬© 2020 Aleksey Antokhin. All rights reserved.
//

import UIKit

/* @IBDesignable –ü–æ–∑–≤–æ–ª—è–µ—Ç –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞–ø–æ–ª–µ–Ω–Ω—ã–π –≤ stackView –≤ interfeceBuilder
 –õ—é–±—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∫–æ–¥–µ –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—Å—è –≤ raealTime –≤ interfeceBuilder */

@IBDesignable class RatingControl: UIStackView {
    
    // MARK: Propetries
    
    var rating = 0
    
    private var ratingButtons = [UIButton]()
    
    @IBInspectable var starSize: CGSize = CGSize(width: 44.0, height: 44.0) {
        didSet {
            setupButtons()
        }
    }
    @IBInspectable var starCount: Int = 5 {
        didSet {
            setupButtons()
        }
    }

    // MARK: Initialization
    
    override init(frame: CGRect) {
        super.init(frame: frame)
        setupButtons()
    }

    required init(coder: NSCoder) {
        super.init(coder: coder)
        setupButtons()
    }
    
    // MARK: Button Action
    
    @objc func ratingButtonTapped(button: UIButton) {
        print("Button pressed üê≤")
    }
    
    
    // MARK: Private Methods
    private func setupButtons() {
        
        for button in ratingButtons {
            removeArrangedSubview(button) // —É–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞(–∫–Ω–æ–ø–∫–∏) –∏–∑ Subview
            button.removeFromSuperview() // —É–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –∏–∑ stackView
        }
        ratingButtons.removeAll() // –ø–µ—Ä–µ–¥ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ–º (—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–ª-–≤–∞ –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫ —á–µ—Ä–µ–∑ interfaceBuilder) –º–∞—Å—Å–∏–≤–∞ –∫–Ω–æ–ø–æ–∫ –æ—á–∏—â–∞–µ–º –µ–≥–æ
        
        for _ in 0..<starCount {
            
            // Create the button
            let button = UIButton()
            button.backgroundColor = .red
            
            // Add constraints
            button.translatesAutoresizingMaskIntoConstraints = false // –æ—Ç–∫–ª—é—á–∞–µ—Ç –∞–≤—Ç–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ constraints –¥–ª—è button
            button.heightAnchor.constraint(equalToConstant: starSize.height).isActive = true
            button.widthAnchor.constraint(equalToConstant: starSize.width).isActive = true
            
            // Setup the button action
            button.addTarget(self, action: #selector(ratingButtonTapped(button:)), for: .touchUpInside)
            
            // Add the button to the stack
            addArrangedSubview(button)
            
            // Add the new button on the rating button array
            ratingButtons.append(button)
        }
        
        
    }
}
